using System;
using System.Collections.Generic;
using EduSync.Models;
using Microsoft.EntityFrameworkCore;

namespace EduSync.Data
{
    public partial class EduSyncContext : DbContext
    {
        public EduSyncContext()
        {
        }

        public EduSyncContext(DbContextOptions<EduSyncContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Assessment> Assessments { get; set; }

        public virtual DbSet<Course> Courses { get; set; }

        public virtual DbSet<Result> Results { get; set; }

        public virtual DbSet<User> Users { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            // Connection string is configured in Program.cs via DI
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Assessment>(entity =>
            {
                entity.Property(e => e.AssessmentId).ValueGeneratedNever();
                entity.Property(e => e.Questions)
                    .HasMaxLength(50)
                    .IsUnicode(false);
                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.Property(e => e.CourseId).ValueGeneratedNever();
                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false);
                entity.Property(e => e.MediaUrl)
                    .HasMaxLength(50)
                    .IsUnicode(false);
                entity.Property(e => e.Title)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Result>(entity =>
            {
                entity.Property(e => e.ResultId).ValueGeneratedNever();
                entity.Property(e => e.AttemptDate).HasColumnType("datetime");
            });

            // Use fully qualified name to fix ambiguity
            modelBuilder.Entity<EduSync.Models.User>(entity =>
            {
                entity.Property(e => e.UserId).ValueGeneratedNever();
                entity.Property(e => e.Email)
                    .HasMaxLength(50)
                    .IsUnicode(false);
                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .IsUnicode(false);
                entity.Property(e => e.PasswordHash)
                    .HasMaxLength(50)
                    .IsUnicode(false);
                entity.Property(e => e.Role)
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
